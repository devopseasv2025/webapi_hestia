name: workflow.yml
on:
  push:
    branches:
      - master
      - main

jobs:
  integration-StaticCodeAnalysis:
    name: Build and analyze
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  Delivery-load-testing:
    needs: [ integration-StaticCodeAnalysis ]
    runs-on: ubuntu-latest
    services:
      api:
        image: ghcr.io/devopseasv2025/webapi_hestia:Latest
        ports:
          - 3000:8080

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run k6 spike test (Docker)
        run: |
          docker run --network host -v ${{ github.workspace }}/k6:/scripts grafana/k6 run /scripts/scripts/spike_test.js
  

  Deployment:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code.
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Generate Semantic Version.
        id: semvar
        uses: paulhatch/semantic-version@v5.4.0
        with:
          bump_each_commit: 'true'
          tag_prefix: "v"  # Expecting tags like v1.2.3
          branch: "HEAD"
          version_format: "${major}.${minor}.${patch}"  # Ensures versioning follows semantic versioning

      - name: login to GHCR.
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and Push Docker Image.
        run: |
          VERSION=${{ steps.semvar.outputs.version }}
          if [ -z "$VERSION" ]; then
            echo "Error: Version is empty."
            exit 1
          fi
          IMAGE_TAG=ghcr.io/${{ github.repository }}:$VERSION
          docker build -t $IMAGE_TAG -f Dockerfile .
          docker push $IMAGE_TAG

      - name: Create release notes.
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.semvar.outputs.version }}
          generateReleaseNotes: true
          body: |
            This release includes the following container images:
            - ghcr.io/${{ github.repository }}:${{ steps.semvar.outputs.version }}
          allowUpdates: true
          token: ${{ secrets.GHCR_TOKEN }}
